"""
 The file is for the talon voice command software and specifically relates to the app termite. The commands allow the user to control the file manager within the app, including refreshing the lists, opening directories and files, selecting folders or files, creating new folders, and showing properties. To use these commands, the user can say a certain phrase such as "go back" or "folder new" to activate the command. There are also commands related to using the terminal in Linux operating systems, including tasks such as listing, adding, editing, and completing tasks, as well as selecting text in shell mode.
"""app: termite
and not win.title: /VIM/
#comment or remove tags for command sets you don't want
#termite doesn't support the file_manager stuff yet
### user.file_manager
title force: user.file_manager_refresh_title()
manager show: user.file_manager_toggle_pickers()
manager close: user.file_manager_hide_pickers()
manager refresh: user.file_manager_update_lists()
go <user.system_path>: user.file_manager_open_directory(system_path)
go back: user.file_manager_go_back()
go forward: user.file_manager_go_forward()
(go parent | daddy): user.file_manager_open_parent()
^follow numb <number_small>$:
    directory = user.file_manager_get_directory_by_index(number_small - 1)
    user.file_manager_open_directory(directory)
^follow {user.file_manager_directories}$:
    user.file_manager_open_directory(file_manager_directories)
^(select | cell) folder {user.file_manager_directories}$:
    user.file_manager_select_directory(file_manager_directories)
^open <number_small>$:
    file = user.file_manager_get_file_by_index(number_small - 1)
    user.file_manager_open_file(file)
^folder numb <number_small>$:
    directory = user.file_manager_get_directory_by_index(number_small - 1)
    user.file_manager_select_directory(directory)
^file numb <number_small>$:
    file = user.file_manager_get_file_by_index(number_small - 1)
    user.file_manager_select_file(file)
^file {user.file_manager_files}$: user.file_manager_select_file(file_manager_files)
^(select | cell) file {user.file_manager_files}$:
    user.file_manager_select_file(file_manager_files)

#new folder
folder new <user.text>: user.file_manager_new_folder(text)

#show properties
properties show: user.file_manager_show_properties()

# open terminal at location
terminal here: user.file_manager_terminal_here()

folder next: user.file_manager_next_folder_page()
folder last: user.file_manager_previous_folder_page()

file next: user.file_manager_next_file_page()
file last: user.file_manager_previous_file_page()
### terminal
os: linux
and tag: user.taskwarrior
# general
task version: "task --version\n"
task commands: "task commands\n"
task help: "task help\n"

# task list
task list: "task list\n"
task list orphans: "task project: list\n"
task list untagged: "task tags.none: list\n"
task list <user.text>: "task list {text}\n"
task list project: "task list project: "
task list project <user.text>: "task list project:{text}\n"

# task add
task add: "task add "
task add <user.text>: "task add {text}\n"
task undo: "task undo\n"

(tasks | task next): "task next\n"

# task editing
task <number> edit$: "task {number} edit"

# task completion
task <number> done$: "task {number} done"
task <number> delete$: "task {number} delete"

# Selection mode
shell yank: key("y")
shell select: key("ctrl-shift-space")
shell insert: key("escape")
visual line: key("v")
visual line mode: key("V")
